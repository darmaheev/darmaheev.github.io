// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button>
    Button
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Button",
    },
    "ref": null,
    "rendered": "Button",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "cAiENU",
        "rules": Array [
          "
  background-color: var(--button-background-color);
  color: var(--button-color);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  text-transform: var(--button-text-transform);
  border: var(--button-border);
  border-radius: var(--button-border-radius);
  line-height: var(--button-line-height);
  letter-spacing: var(--button-letter-spacing);
  vertical-align: var(--button-vertical-align);
  padding: var(--button-padding);
  cursor: pointer;

  &:disabled {
    background-color: var(--button-border-color);
    opacity: 0.8;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--button-background-color-hover);
  }

  ",
          [Function],
          "

  ",
          [Function],
          "

  ",
          [Function],
          "

  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Button",
      },
      "ref": null,
      "rendered": "Button",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "cAiENU",
          "rules": Array [
            "
  background-color: var(--button-background-color);
  color: var(--button-color);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  text-transform: var(--button-text-transform);
  border: var(--button-border);
  border-radius: var(--button-border-radius);
  line-height: var(--button-line-height);
  letter-spacing: var(--button-letter-spacing);
  vertical-align: var(--button-vertical-align);
  padding: var(--button-padding);
  cursor: pointer;

  &:disabled {
    background-color: var(--button-border-color);
    opacity: 0.8;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--button-background-color-hover);
  }

  ",
            [Function],
            "

  ",
            [Function],
            "

  ",
            [Function],
            "

  ",
            [Function],
            "
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`primary button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    primary={true}
  >
    Button
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Button",
      "primary": true,
    },
    "ref": null,
    "rendered": "Button",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "cAiENU",
        "rules": Array [
          "
  background-color: var(--button-background-color);
  color: var(--button-color);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  text-transform: var(--button-text-transform);
  border: var(--button-border);
  border-radius: var(--button-border-radius);
  line-height: var(--button-line-height);
  letter-spacing: var(--button-letter-spacing);
  vertical-align: var(--button-vertical-align);
  padding: var(--button-padding);
  cursor: pointer;

  &:disabled {
    background-color: var(--button-border-color);
    opacity: 0.8;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--button-background-color-hover);
  }

  ",
          [Function],
          "

  ",
          [Function],
          "

  ",
          [Function],
          "

  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Button",
        "primary": true,
      },
      "ref": null,
      "rendered": "Button",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "cAiENU",
          "rules": Array [
            "
  background-color: var(--button-background-color);
  color: var(--button-color);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  text-transform: var(--button-text-transform);
  border: var(--button-border);
  border-radius: var(--button-border-radius);
  line-height: var(--button-line-height);
  letter-spacing: var(--button-letter-spacing);
  vertical-align: var(--button-vertical-align);
  padding: var(--button-padding);
  cursor: pointer;

  &:disabled {
    background-color: var(--button-border-color);
    opacity: 0.8;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--button-background-color-hover);
  }

  ",
            [Function],
            "

  ",
            [Function],
            "

  ",
            [Function],
            "

  ",
            [Function],
            "
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`small button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    small={true}
  >
    Button
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Button",
      "small": true,
    },
    "ref": null,
    "rendered": "Button",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "cAiENU",
        "rules": Array [
          "
  background-color: var(--button-background-color);
  color: var(--button-color);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  text-transform: var(--button-text-transform);
  border: var(--button-border);
  border-radius: var(--button-border-radius);
  line-height: var(--button-line-height);
  letter-spacing: var(--button-letter-spacing);
  vertical-align: var(--button-vertical-align);
  padding: var(--button-padding);
  cursor: pointer;

  &:disabled {
    background-color: var(--button-border-color);
    opacity: 0.8;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--button-background-color-hover);
  }

  ",
          [Function],
          "

  ",
          [Function],
          "

  ",
          [Function],
          "

  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Button",
        "small": true,
      },
      "ref": null,
      "rendered": "Button",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "cAiENU",
          "rules": Array [
            "
  background-color: var(--button-background-color);
  color: var(--button-color);
  font-size: var(--button-font-size);
  font-weight: var(--button-font-weight);
  text-transform: var(--button-text-transform);
  border: var(--button-border);
  border-radius: var(--button-border-radius);
  line-height: var(--button-line-height);
  letter-spacing: var(--button-letter-spacing);
  vertical-align: var(--button-vertical-align);
  padding: var(--button-padding);
  cursor: pointer;

  &:disabled {
    background-color: var(--button-border-color);
    opacity: 0.8;
    pointer-events: none;
  }

  &:hover {
    background-color: var(--button-background-color-hover);
  }

  ",
            [Function],
            "

  ",
            [Function],
            "

  ",
            [Function],
            "

  ",
            [Function],
            "
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
