// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders pagination 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Pagination
    onPageClick={[MockFunction]}
    onPageSizeChange={[Function]}
    pageSize={10}
    start={0}
    total={0}
    withPageSize={false}
    withPages={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        Array [
          <ForwardRef
            current={false}
            disabled={false}
            onClick={[Function]}
          >
            1
          </ForwardRef>,
        ],
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "function",
        "props": Object {
          "children": 1,
          "current": false,
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": 1,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "rules": Array [
              "
  margin-top: 10px;
  &:not(:last-child) {
    margin-right: 10px;
  }
",
            ],
          },
          "displayName": "Styled(Button)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      false,
      false,
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": true,
        "rules": Array [
          "
  display: flex;
  align-items: center;
  background-color: var(--pagination-background-color);
  border-top: 1px solid var(--pagination-border-color);
  border-bottom: 1px solid var(--pagination-border-color);
  padding: var(--pagination-padding);
  width: var(--pagination-width);
  min-height: var(--pagination-height);
  flex-wrap: wrap;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          Array [
            <ForwardRef
              current={false}
              disabled={false}
              onClick={[Function]}
            >
              1
            </ForwardRef>,
          ],
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "function",
          "props": Object {
            "children": 1,
            "current": false,
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": 1,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
  margin-top: 10px;
  &:not(:last-child) {
    margin-right: 10px;
  }
",
              ],
            },
            "displayName": "Styled(Button)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        false,
        false,
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  align-items: center;
  background-color: var(--pagination-background-color);
  border-top: 1px solid var(--pagination-border-color);
  border-bottom: 1px solid var(--pagination-border-color);
  padding: var(--pagination-padding);
  width: var(--pagination-width);
  min-height: var(--pagination-height);
  flex-wrap: wrap;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`renders pagination with correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Pagination
    currentpage={2}
    onPageClick={[MockFunction]}
    onPageSizeChange={[Function]}
    pageSize={50}
    start={0}
    total={100}
    withPageSize={false}
    withPages={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        Array [
          <ForwardRef
            current={false}
            disabled={false}
            onClick={[Function]}
          >
            1
          </ForwardRef>,
          <ForwardRef
            current={false}
            disabled={false}
            onClick={[Function]}
          >
            2
          </ForwardRef>,
        ],
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "function",
        "props": Object {
          "children": 1,
          "current": false,
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": 1,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "rules": Array [
              "
  margin-top: 10px;
  &:not(:last-child) {
    margin-right: 10px;
  }
",
            ],
          },
          "displayName": "Styled(Button)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "function",
        "props": Object {
          "children": 2,
          "current": false,
          "disabled": false,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": 2,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            [Function],
          ],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "rules": Array [
              "
  margin-top: 10px;
  &:not(:last-child) {
    margin-right: 10px;
  }
",
            ],
          },
          "displayName": "Styled(Button)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      false,
      false,
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": true,
        "rules": Array [
          "
  display: flex;
  align-items: center;
  background-color: var(--pagination-background-color);
  border-top: 1px solid var(--pagination-border-color);
  border-bottom: 1px solid var(--pagination-border-color);
  padding: var(--pagination-padding);
  width: var(--pagination-width);
  min-height: var(--pagination-height);
  flex-wrap: wrap;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          Array [
            <ForwardRef
              current={false}
              disabled={false}
              onClick={[Function]}
            >
              1
            </ForwardRef>,
            <ForwardRef
              current={false}
              disabled={false}
              onClick={[Function]}
            >
              2
            </ForwardRef>,
          ],
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "function",
          "props": Object {
            "children": 1,
            "current": false,
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": 1,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
  margin-top: 10px;
  &:not(:last-child) {
    margin-right: 10px;
  }
",
              ],
            },
            "displayName": "Styled(Button)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "function",
          "props": Object {
            "children": 2,
            "current": false,
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": 2,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
  margin-top: 10px;
  &:not(:last-child) {
    margin-right: 10px;
  }
",
              ],
            },
            "displayName": "Styled(Button)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        false,
        false,
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  align-items: center;
  background-color: var(--pagination-background-color);
  border-top: 1px solid var(--pagination-border-color);
  border-bottom: 1px solid var(--pagination-border-color);
  padding: var(--pagination-padding);
  width: var(--pagination-width);
  min-height: var(--pagination-height);
  flex-wrap: wrap;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
