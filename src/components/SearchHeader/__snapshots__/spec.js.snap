// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders searchHeader 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchHeader
    filters={Array []}
    handleChangeFilters={[Function]}
    handleDeleteFilters={[Function]}
    handleModalClose={[Function]}
    handleModalOpen={[Function]}
    handleQueryChange={[Function]}
    isVisibleModal={false}
    query=""
    typeList={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          <ForwardRef
            name="query"
            onChange={[Function]}
            placeholder="Search..."
            value=""
          />
          <ForwardRef
            onClick={[Function]}
            squared={true}
          >
            <FaFilter />
          </ForwardRef>
        </ForwardRef>,
        <TagList
          handleDelete={[Function]}
          tags={Array []}
        />,
        <SearchHeaderFilterModal
          filterList={Array []}
          filters={Array []}
          isOpen={false}
          onChangeFilters={[Function]}
          onClose={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              name="query"
              onChange={[Function]}
              placeholder="Search..."
              value=""
            />,
            <ForwardRef
              onClick={[Function]}
              squared={true}
            >
              <FaFilter />
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": "query",
              "onChange": [Function],
              "placeholder": "Search...",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                Object {
                  "type": "text",
                },
              ],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jTzLTM",
                "isStatic": true,
                "rules": Array [],
              },
              "displayName": "Styled(Input)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jTzLTM",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <FaFilter />,
              "onClick": [Function],
              "squared": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                Object {
                  "type": "button",
                },
              ],
              "componentStyle": ComponentStyle {
                "componentId": "sc-fjdhpX",
                "isStatic": true,
                "rules": Array [
                  "
  margin-left: 10px;
",
                ],
              },
              "displayName": "Styled(Button)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-fjdhpX",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-VigVT",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;  
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-VigVT",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleDelete": [Function],
          "tags": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "filterList": Array [],
          "filters": Array [],
          "isOpen": false,
          "onChangeFilters": [Function],
          "onClose": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-gqjmRU",
        "isStatic": true,
        "rules": Array [
          "
  display: flex;
  flex-direction: column;
  width: 100%;
",
        ],
      },
      "displayName": "styled.header",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-gqjmRU",
      "target": "header",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            <ForwardRef
              name="query"
              onChange={[Function]}
              placeholder="Search..."
              value=""
            />
            <ForwardRef
              onClick={[Function]}
              squared={true}
            >
              <FaFilter />
            </ForwardRef>
          </ForwardRef>,
          <TagList
            handleDelete={[Function]}
            tags={Array []}
          />,
          <SearchHeaderFilterModal
            filterList={Array []}
            filters={Array []}
            isOpen={false}
            onChangeFilters={[Function]}
            onClose={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                name="query"
                onChange={[Function]}
                placeholder="Search..."
                value=""
              />,
              <ForwardRef
                onClick={[Function]}
                squared={true}
              >
                <FaFilter />
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "name": "query",
                "onChange": [Function],
                "placeholder": "Search...",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  Object {
                    "type": "text",
                  },
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jTzLTM",
                  "isStatic": true,
                  "rules": Array [],
                },
                "displayName": "Styled(Input)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jTzLTM",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <FaFilter />,
                "onClick": [Function],
                "squared": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  Object {
                    "type": "button",
                  },
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-fjdhpX",
                  "isStatic": true,
                  "rules": Array [
                    "
  margin-left: 10px;
",
                  ],
                },
                "displayName": "Styled(Button)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-fjdhpX",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;  
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleDelete": [Function],
            "tags": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "filterList": Array [],
            "filters": Array [],
            "isOpen": false,
            "onChangeFilters": [Function],
            "onClose": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-gqjmRU",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  flex-direction: column;
  width: 100%;
",
          ],
        },
        "displayName": "styled.header",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-gqjmRU",
        "target": "header",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
